#=====================================================================================
# This properties file represents configuration values which get copied into
# other files (including other configuration files!) within the i2b2 install.
# The utility used to do this is the ConfigMerger utility.
#
# NOTES. 
# (1) A cursory glance at the values of the settings will show there is a fair degree 
# of duplication. Requires rationalization at some future time.
#
# (2) Give careful thought to to internal and external web communications!
# For the latter: how firewalls / load balancers deal with port mapping.
# The current setting (still experimental) is for the load balancers to map 
# https://xxxx:443 to http://xxxx:80   (with encryption taken care of by the load balancers)
# https://xxxx:8443 to http://xxxx:8080 (again with encryption taken care of).
#
# Any internal communication needs to be http://xxxx:8080 (with cells co-located)
#
# At some not too distant point in time, we need JBoss to deal with SSL itself.
# This will mean the setup is more portable, ie: does not need to mimic the way 
# Leicester University manages access to web resources from outside.
#======================================================================================

db.type=sqlserver

#=====================================================================================
# Next section deals with defining the overall i2b2 domain to be installed
# Notes: 
# (1) Make the DOMAIN_ID and the DOMAIN_NAME identical (with no spaces). 
#     I've had problems when they were not, and seen problems reported in the forum.
#=====================================================================================
domain.id=LCBRU
domain.name=LCBRU
domain.help.url=http://www2.le.ac.uk/projects/bru/researchers/briccs

jboss.home=/var/local/brisskit/i2b2/jboss

#=====================================================================================
# i2b2 config and dataset definitions section.
# Notes:
# (1) Be careful of special characters in passwords.
#=====================================================================================
database.server=192.168.30.128
jdbc.url=jdbc:sqlserver://192.168.30.128

# sqlserver specific (comment out when not sqlserver):
sqlserver.port=1433

# sqlserver specific (comment out when not sqlserver):
sqlserver.instanceName=(local)

db.driver=com.microsoft.sqlserver.jdbc.SQLServerDriver
#db.driver=oracle.jdbc.driver.OracleDriver

hive.databasename=i16hive 
hive.username=i16hive
hive.password=i16hive

pm.databasename=i16pm
pm.username=i16pm
pm.password=i16pm

demods.databasename=i16demo
demods.username=i16demo
demods.password=i16demo

metadata.databasename=i16demo
metadata.username=i16demo
metadata.password=i16demo

workdata.databasename=i16demo
workdata.username=i16demo
workdata.password=i16demo


# Set to mssql or oracle:
jboss.jms.persistance=mssql

#===================================================================================
# This section is about web service communication with the cells in the hive.
# My guess is that the settings are used for inter-cell communication, so...
# If all your cells are co-located, these should all read as localhost.
#===================================================================================
queryprocessor.ws.pm.url=http://localhost:8080/i2b2/rest/PMService/getServices
edu.harvard.i2b2.crc.loader.ws.pm.url=http://localhost:8080/i2b2/rest/PMService/getServices
ontology.ws.pm.url=http://localhost:8080/i2b2/rest/PMService/getServices
edu.harvard.i2b2.fr.ws.pm.url=http://localhost:8080/i2b2/rest/PMService/getServices
workplace.ws.pm.url=http://localhost:8080/i2b2/rest/PMService/getServices
queryprocessor.ws.ontology.url=http://localhost:8080/i2b2/rest/OntologyService/getTermInfo
edu.harvard.i2b2.crc.delegate.ontology.url=http://localhost:8080/i2b2/rest/OntologyService
edu.harvard.i2b2.crc.loader.ws.fr.url=http://localhost:8080/i2b2/services/FRService/
edu.harvard.i2b2.ontology.ws.fr.url=http://localhost:8080/i2b2/services/FRService/
edu.harvard.i2b2.ontology.ws.crc.url=http://localhost:8080/i2b2/rest/QueryToolService

#===========================================================================================
# Covers problem with i2b2hive schema name being a specifically named hard coded database. 
# NB: These should be the same value as hive.databasename above.
#===========================================================================================
queryprocessor.ds.lookup.schemaname=i16hive
edu.harvard.i2b2.crc.loader.ds.lookup.schemaname=i16hive
ontology.bootstrapdb.metadataschema=i16hive
workplace.bootstrapdb.metadataschema=i16hive

#========================================================================================
# The following address is used by the web client, and needs a localhost address!!! 
#
# The web client communicates with the hive via a simple proxy, 
# ie: all communication goes through apache via the proxy to the hive/cells. 
# This address is the one the proxy uses.
# (If you want to see the proxy, find index.php within the admin directory under apache).
#========================================================================================
pm.getservices.address.used.by.proxy=http://localhost:8080/i2b2/rest/PMService/

#=============================================================================================
# This is used to update the PM database to advertise cell web services to the outside world.
# (see file pm_access_insert_data.sql)
# If encryption use https with port 8443, otherwise use http with port 8080
#=============================================================================================
full.server.address=http://i2b216:8080

server.type=SQLSERVER
queryprocessor.ds.lookup.servertype=SQLSERVER
edu.harvard.i2b2.crc.loader.ds.lookup.servertype=SQLSERVER




